name: ci

on: [push, pull_request]

jobs:
  build:
    name: ${{ matrix.kind }} ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    timeout-minutes: 60
    strategy:
      matrix:
        os: [macOS-latest, windows-2019, ubuntu-latest]
        kind: ["test", "lint"]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install rust (stable)
        run: curl https://sh.rustup.rs -sSf | sh -s -- -y

      - name: Install Deno
        uses: denoland/setup-deno@v1
        with:
          deno-version: "~1.30"

      - name: Log versions
        run: |
          deno --version
          rustc --version
          cargo --version

      - name: Cache cargo registry
        uses: actions/cache@v1
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}

      - name: Cache cargo index
        uses: actions/cache@v1
        with:
          path: ~/.cargo/git
          key: ${{ runner.os }}-cargo-index-${{ hashFiles('**/Cargo.lock') }}

      - name: Cache cargo build
        uses: actions/cache@v1
        with:
          path: target
          key: ${{ matrix.kind }}-${{ runner.os }}-cargo-build-target-${{ hashFiles('**/Cargo.lock') }}

      - name: Clippy
        if: matrix.kind == 'lint'
        run: cargo clippy --all-targets --release --locked -- -D clippy::all

      - name: Build
        if: matrix.kind == 'test'
        run: cargo build --release --locked 

      - name: Test TypeScript
        if: matrix.kind == 'test'
        run: ./test-with-local-build.sh

      - name: Release
        uses: softprops/action-gh-release@v1
        if: matrix.kind == 'test' && startsWith(github.ref, 'refs/tags/')
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: |
            target/release/libdeno_argon2.dylib
            target/release/libdeno_argon2.so
            target/release/deno_argon2.dll

      - name: After Release Test
        if: matrix.kind == 'test' && startsWith(github.ref, 'refs/tags/')
        run: deno test -A --unstable
