name: ci

on: [push, pull_request]

jobs:
  build:
    name: ${{ matrix.kind }} ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    timeout-minutes: 60
    strategy:
      matrix:
        os: [macOS-latest, windows-2019, ubuntu-latest]
        kind: ["test", "lint"]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v1

      - name: Install Rust
        uses: hecrj/setup-rust-action@v1
        with:
          rust-version: "1.51.0"

      - name: Install clippy and rustfmt
        if: matrix.kind == 'lint'
        run: |
          rustup component add clippy
          rustup component add rustfmt

      - name: Install Deno
        uses: denolib/setup-deno@master
        with:
          deno-version: "1.10.1"

      - name: Log versions
        run: |
          deno --version
          rustc --version
          cargo --version

      - name: Cache cargo registry
        uses: actions/cache@v1
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}

      - name: Cache cargo index
        uses: actions/cache@v1
        with:
          path: ~/.cargo/git
          key: ${{ runner.os }}-cargo-index-${{ hashFiles('**/Cargo.lock') }}

      - name: Cache cargo build
        uses: actions/cache@v1
        with:
          path: target
          key: ${{ matrix.kind }}-${{ runner.os }}-cargo-build-target-${{ hashFiles('**/Cargo.lock') }}

      - name: Clippy
        if: matrix.kind == 'lint'
        run: cargo clippy --all-targets --release --locked -- -D clippy::all

      - name: Build
        if: matrix.kind == 'test'
        run: cargo build --release --locked --all-targets

      - name: Test TypeScript
        if: matrix.kind == 'test'
        run: deno run --allow-read --allow-write --allow-plugin --allow-run --allow-env --unstable tests/run.ts

      - name: Release
        uses: softprops/action-gh-release@v1
        if: matrix.kind == 'test' && startsWith(github.ref, 'refs/tags/')
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: |
            target/release/libdeno_argon2.dylib
            target/release/libdeno_argon2.so
            target/release/deno_argon2.dll
